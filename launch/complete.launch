<launch>
	<!-- Start VRPN Client node: getting data from Optitrack -->
	<!-- Include  the file that contains your custom vrpn launch-->
	<include file="$(find tic_tac_drone)/launch/borongaj.launch"/>

	<!-- Start Joy node: user control with joystick -->
	<node pkg="joy" type="joy_node" name="JoyInput">
		<!-- REPLACE value WITH THE RIGHT JOYSTICK IDENTIFIERˇˇˇ-->
		<param name="dev" type="string" value="/dev/input/js1" />
		<param name="deadzone" value="0"/>
	</node>

	<!-- Start Optitrack node: calculating and distributing postion data -->
	<node pkg="tic_tac_drone" type="OptitrackNode.py" name="Optitrack">
		<remap from="MyUAV/pose" to="vrpn_client_node/UAV1/pose"/>
		<remap from="OpUAV/pose" to="vrpn_client_node/UAV2/pose"/>
		<remap from="Field/pose" to="vrpn_client_node/Field/pose"/>
	</node>

	<!-- Start Controller node: providing inputs for controling the drone -->
	<node pkg="tic_tac_drone" type="ControllerNode.py" name="Controller" output="screen">
		<remap from="joystick_input" to="joy"/>
		<param name="sensitivity" value="0.6"/>
		<param name="yaw_rate" value="0.2"/>
	</node>

	<!-- Start Rosserial node: communication between ROS and microcontroller -->
	<node pkg="rosserial_python" type="serial_node.py" name="rosserial">
		<!-- REPLACE value WITH THE RIGHT PORT NAME -->
		<param name="port" value="/dev/ttyUSB0"/>
	</node>

	<!-- Start GUI_Game node: GUI and game algorithm -->
	<node pkg="tic_tac_drone" type="GUI_GameNode.py" name="GUI" output="screen">
	</node>

	<!-- Start Game detection node: planning course and detecting played move -->
	<node pkg="tic_tac_drone" type="GameDetectionNode.py" name="GameDetection" output="screen">
		<param name="_cell_size" value="0.5"/>
		<param name="_max_height" value="1"/>
	</node>
</launch>